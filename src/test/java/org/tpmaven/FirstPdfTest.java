package org.tpmaven;

import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.parser.PdfTextExtractor;
import org.junit.jupiter.api.Test;

import java.io.IOException;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class FirstPdfTest {

    @Test
    void testGeneratedPdfContainsTitle() throws IOException {
        PdfReader pdfReader = new PdfReader("FirstPdf.pdf");
        String text = PdfTextExtractor.getTextFromPage(pdfReader, 1);
        pdfReader.close();

        assertTrue(text.contains("Title of the document"));
    }

    @Test
    void testGeneratedPdfContainsAuthor() throws IOException {
        PdfReader pdfReader = new PdfReader("FirstPdf.pdf");
        String text = PdfTextExtractor.getTextFromPage(pdfReader, 1);
        pdfReader.close();

        assertTrue(text.contains("Report generated by:"));
    }

    @Test
    void testGeneratedPdfContainsTable() throws IOException {
        PdfReader pdfReader = new PdfReader("FirstPdf.pdf");
        String text = PdfTextExtractor.getTextFromPage(pdfReader, 1);
        pdfReader.close();

        assertTrue(text.contains("Table Header 1"));
        assertTrue(text.contains("Table Header 2"));
        assertTrue(text.contains("Table Header 3"));
        assertTrue(text.contains("1.0"));
        assertTrue(text.contains("2.2"));
    }

    @Test
    void testGeneratedPdfContainsList() throws IOException {
        PdfReader pdfReader = new PdfReader("FirstPdf.pdf");
        String text = PdfTextExtractor.getTextFromPage(pdfReader, 1);
        pdfReader.close();

        assertTrue(text.contains("First point"));
        assertTrue(text.contains("Second point"));
        assertTrue(text.contains("Third point"));
    }

    @Test
    void testGeneratedPdfContainsChapterTitles() throws IOException {
        PdfReader pdfReader = new PdfReader("FirstPdf.pdf");
        String text = PdfTextExtractor.getTextFromPage(pdfReader, 1);
        pdfReader.close();

        assertTrue(text.contains("First Chapter"));
        assertTrue(text.contains("Second Chapter"));
    }

    @Test
    void testGeneratedPdfContainsSubcategoryTitles() throws IOException {
        PdfReader pdfReader = new PdfReader("FirstPdf.pdf");
        String text = PdfTextExtractor.getTextFromPage(pdfReader, 1);
        pdfReader.close();

        assertTrue(text.contains("Subcategory 1"));
        assertTrue(text.contains("Subcategory 2"));
        assertTrue(text.contains("Subcategory"));
    }
}
